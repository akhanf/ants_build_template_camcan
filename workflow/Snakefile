from os.path import join
import itertools
import pandas as pd

configfile: 'config/config.yml'


cohorts = config['cohorts']

#subjects is a dict, indexed by the cohort
#load participants.tsv file, and strip off sub- from participant_id column
subjects = dict()
for cohort in config['cohorts']:
    subjects[cohort] = [ s.strip('sub-') for s in pd.read_table(config['participants_tsv'][cohort]).participant_id.to_list() ] 

#get channels using keys in in_images
channels = list(config['in_images'].keys())

#need this to make sure iterations don't go below 0!
wildcard_constraints:
    iteration="[0-9]+",
    cohort="[a-zA-Z0-9]+"


if config['enable_quick_dirty'] == True:
    config['ants'] = config['ants_quick_dirty']


#localrules: all, gen_init_avg_template, get_existing_template, set_init_template

rule all:
    input:
        json = 'results/tpl-{name}/template_description.json'.format(name=config['template_name'])


#run this target rule with: --omit-from reg_to_template
# e.g.:  snakemake all_preproc --omit-from reg_to_template
rule all_preproc:
    input:
        expand('results/cohort-{cohort}/iter_1/template_T1w.nii.gz',cohort=cohorts)



#run this with --until warp_to_template 
rule all_iter1:
    input:
        expand('results/cohort-{cohort}/iter_1/template_{channel}.nii.gz',cohort=cohorts,channel=channels)




include: 'rules/common.smk'
include: 'rules/reg_t2_to_t1.smk'
include: 'rules/ants_template.smk'
include: 'rules/templateflow.smk'


